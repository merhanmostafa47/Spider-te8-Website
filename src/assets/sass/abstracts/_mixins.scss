// Property In RTL
@mixin rtl($property, $ltr-value, $rtl-value) {
  #{$property}: $ltr-value;

  body[dir=rtl] & {
    #{$property}: $rtl-value;
  }
}

// Flex
@mixin flex($justify, $align, $direction: row) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
}

// Font
@mixin font($weight, $size, $color: var(--theme_text_clr)) {
  font-weight: $weight;
  font-size: $size;
  color: $color;
}

// Size
@mixin size($width, $height: auto) {
  inline-size: $width;
  block-size: $height;
}

@mixin lines($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin boxSizing {
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin transitioning($t) {
  -moz-transition: all $t ease-in-out;
  -webkit-transition: all $t ease-in-out;
  -o-transition: all $t ease-in-out;
  transition: all $t ease-in-out;
}

@mixin colorTransitioning($ct) {
  -moz-transition: background $ct linear, color $ct linear;
  -webkit-transition: background $ct linear, color $ct linear;
  -o-transition: background $ct linear, color $ct linear;
  transition: background $ct linear, color $ct linear;
}

@mixin borderRadius($br) {
  -moz-border-radius: $br;
  -webkit-border-radius: $br;
  -o-border-radius: $br;
  border-radius: $br;
}

@mixin customBorderRadius($tl, $tr, $br, $bl) {
  -moz-border-radius: $tl $tr $br $bl;
  -o-border-radius: $tl $tr $br $bl;
  -webkit-border-radius: $tl $tr $br $bl;
  border-radius: $tl $tr $br $bl;
}

@mixin flexCenterAlignment {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

@mixin flexStartAlignment {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  flex-direction: column;
}

@mixin verticalFlexStartAlignment {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
}

@mixin flexSpaceBetweenAlignment {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flexSpaceAroundAlignment {
  display: flex;
  align-items: center;
  justify-content: space-around;
}

@mixin flexEndAlignment {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

// media queries
@mixin media($point) {
  @if $point==xs {
    @media (max-width:575px) {
      @content;
    }
  }

  @else if $point==sm {
    @media (max-width:767px) {
      @content;
    }
  }

  @else if $point==main {
    @media (min-width:768px) {
      @content;
    }
  }


  @else if $point==md {
    @media (max-width:991px) {
      @content;
    }
  }

  @else if $point==lg {
    @media (max-width:1224px) {
      @content;
    }
  }

  @else if $point==xl {
    @media (min-width:1200px) {
      @content;
    }
  }
}

// ============= Start:: Filters ===================
@mixin filterWhite {
  filter: brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(147%) hue-rotate(168deg) brightness(106%) contrast(105%);
}

@mixin filterMainThemeClr {
  filter: brightness(0) saturate(100%) invert(11%) sepia(79%) saturate(4643%) hue-rotate(261deg) brightness(60%) contrast(119%);
}

@mixin filterSecondaryThemeClr {
  filter: brightness(0) saturate(100%) invert(47%) sepia(59%) saturate(7372%) hue-rotate(341deg) brightness(113%) contrast(114%);
}

// ============= Start:: Shadows ===================
@mixin simpleShadow {
  box-shadow: 0px 1px 8px 0px rgba(1, 0, 168, 0.16);
}

@mixin heavyShadow {
  box-shadow: 0px 2px 150px 0px rgba(1, 0, 168, 0.08);
}

// ============= Buttons Style ===================
@mixin mainBtn($bgColor) {
  border-radius: 1rem;
  block-size: 3rem;
  min-inline-size: 8rem;
  @include font(600, 1rem, $white_clr);
  background-color: $bgColor;
  transition: all .3s ease-in-out;
  padding: 0 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  position: relative;
  overflow: hidden;

  @include media(sm) {
    font-size: .9rem;
  }

  @if $bgColor==$main_theme_clr {
    &:hover {
      background-color: $secondary_theme_clr;
    }
  }

  @else if $bgColor ==$secondary_theme_clr {
    &:hover {
      color: $main_theme_clr;
      background-color: rgba(255, 255, 255, 0.9);
      box-shadow: 0 0 5px #fff, 0 0 20px rgba(255, 255, 255, 0.4), 0 0 40px rgba(255, 255, 255, 0.5), 0 0 60px rgba(255, 255, 255, 0.4);
    }
  }

  @else {
    @error "Unknown color #{$bgColor}."
  }
}